# =============================================================================
# Organization Protection Policy CI Workflow
# =============================================================================
#
# Purpose: Multi-language continuous integration workflow for automated
#          building, testing, and quality assurance with branch protection integration
# Author: Stratovate Solutions DevOps Team
# Version: 2.0
# Last Updated: 2025-08-19
#
# This reusable workflow provides comprehensive CI/CD capabilities for multiple
# programming languages and project types. It automatically detects project
# type and applies appropriate build, test, and quality assurance processes
# that integrate with organization branch protection policies.
# =============================================================================

name: Organization Protection Policy CI

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to protect (default: main)'
        required: false
        default: 'main'
        type: string
      required-reviewers:
        description: 'Number of required reviewers (1-6)'
        required: false
        default: '2'
        type: string
      enforce-admins:
        description: 'Apply protection to admins'
        required: false
        default: true
        type: boolean
      dry-run:
        description: 'Preview changes without applying'
        required: false
        default: false
        type: boolean

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      - name: Run tests
        run: npm test

  apply-branch-protection:
    name: Apply Branch Protection
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ !inputs.dry-run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create branch protection rule
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          curl -X PUT \
               -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/branches/${{ inputs.branch }}/protection \
               -d '{
            "required_status_checks": {
              "strict": true,
              "contexts": ["ci", "build", "test"]
            },
            "enforce_admins": ${{ inputs.enforce-admins }},
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": ${{ fromJSON(inputs.required-reviewers) }}
            },
            "restrictions": null
          }'

      - name: Block force pushes and deletions
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          curl -X PATCH \
               -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/branches/${{ inputs.branch }}/protection \
               -d '{
            "allow_force_pushes": false,
            "allow_deletions": false
          }'

  dry-run:
    name: Dry Run
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ inputs.dry-run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display branch protection settings
        run: |
          echo "Branch: ${{ inputs.branch }}"
          echo "Required Reviewers: ${{ inputs.required-reviewers }}"
          echo "Enforce for Admins: ${{ inputs.enforce-admins }}"
          echo "Status Checks: ci,build,test"
          echo "Force Pushes: Blocked"
          echo "Branch Deletion: Blocked"
